CREATE OR REPLACE TRIGGER NORMAL_SALES_INVOICE
AFTER INSERT ON DT_INVOICE 

for each row
DECLARE
  customer_name VARCHAR2(256);
  customer_tin VARCHAR2(256);
  customer_trade_name VARCHAR2(256);
  customer_address VARCHAR2(256);
  customer_contact VARCHAR2(256);
  customer_code VARCHAR2(256);
  dte VARCHAR2(256);
  sales_dte VARCHAR2(256);
  freight_value VARCHAR2(256);
  item_code VARCHAR2(256);
  item_name VARCHAR2(256);
  item_classification VARCHAR2(256);
  bar_code VARCHAR2(256);

  req utl_http.req;
  res utl_http.resp;
  data varchar2(4000);
  res_text  VARCHAR2(32767);
  json_obj json_object_t;
  code  VARCHAR2(256);
  message  VARCHAR2(256);
  res_date  VARCHAR2(256);
  transaction_data json_object_t;
  rcptNo INTEGER;
  intrlData VARCHAR2(256);
  rcptSign VARCHAR2(256);
  totRcptNo INTEGER;
  vsdcRcptPbctDate VARCHAR2(256);
  sdcId VARCHAR2(256);
  mrcNo VARCHAR2(256);
  timestamp  VARCHAR2(256);
  status  VARCHAR2(256);
  error  VARCHAR2(256);
  url varchar2(100) := 'http://192.168.0.144:81/abacus_rra_middleware/send_sales_transaction';

BEGIN
  SELECT
    NU_CUSTOMER_CODE,
    TO_CHAR(DT_INVOICE_DATE, 'YYYYMMDDHH24MISS'),
    NU_FREIGHT_VALUE
  
  INTO
    customer_code,
    dte,
    freight_value

  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.VC_INVOICE_NO AND VC_COMP_CODE = :new.VC_COMP_CODE AND DT_INVOICE_DATE = :new.DT_INVOICE_DATE;


  SELECT
    TO_CHAR(DT_INVOICE_DATE, 'YYYYMMDD')
  INTO
    sales_dte
  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.VC_INVOICE_NO AND VC_COMP_CODE = :new.VC_COMP_CODE AND DT_INVOICE_DATE = :new.DT_INVOICE_DATE;


  SELECT
    vc_vat_no,
    vc_CUSTOMER_NAME,
    VC_TELEPHONE,
    VC_CATEGORY_CODE,
    VC_BILL_ADDRESS1
  INTO
    customer_tin,
    customer_name,
    customer_contact,
    customer_trade_name,
    customer_address 
  FROM
    MST_CUSTOMER
  WHERE
    NU_CUSTOMER_CODE = customer_code AND VC_COMP_CODE = :new.VC_COMP_CODE;


  SELECT 
     VC_PRODUCT_NAME,
     VC_PRODUCT_CODE,
     VC_CLASSIFICATION,
     VC_BARCODE1

  INTO
     item_name,
     item_code,
     item_classification,
     bar_code

  FROM 
     MST_PRODUCT 
  WHERE 
     VC_PRODUCT_CODE = :new.VC_PRODUCT_CODE AND VC_COMP_CODE = :new.VC_COMP_CODE;


  data := '{        
        "tin":"999976940",
        "bhfId":"00",
        "invcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.VC_INVOICE_NO,5,6))) ||'",
        "orgInvcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.VC_INVOICE_NO,5,6))) ||'",
        "custTin":"'|| customer_tin ||'",
        "custNm":"'|| customer_name ||'",
        "salesTyCd":"N",
        "rcptTyCd":"S",
        "pmtTyCd":"02",
        "salesSttsCd":"02",
        "cfmDt":"'|| dte ||'",
        "salesDt":"'|| sales_dte ||'",
        "stockRlsDt":"'|| dte ||'",
        "cnclReqDt":null,
        "cnclDt":null,
        "rfdDt":null,
        "rfdRsnCd":null,
        "totItemCnt":"1",
        "taxblAmtA":"0",
        "taxblAmtB":"0",
        "taxblAmtC":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "taxblAmtD":"0",
        "taxRtA":"0",
        "taxRtB":"0",
        "taxRtC":"0",
        "taxRtD":"0",
        "taxAmtA":"0",
        "taxAmtB":"0",
        "taxAmtC":"0",
        "taxAmtD":"0",
        "totTaxblAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "totTaxAmt":"0",
        "totAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "prchrAcptcYn":"N",
        "remark":null,
        "regrId":"Admin",
        "regrNm":"Admin",
        "modrId":"Admin",
        "modrNm":"Admin",
        "receipt":{
            "custTin":"'|| customer_tin ||'",
            "custMblNo":"'|| customer_contact ||'",
            "rptNo":null,
            "trdeNm":"'|| customer_trade_name ||'",
            "adrs":"'|| customer_address ||'",r
            "prchrAcptcYn":"N"
        },
        "itemList":[{
            "itemSeq":"'|| :new.NU_SR_NO ||'",
            "itemCd":"'|| item_code ||'",
            "itemClsCd":"'|| item_classification ||'",
            "itemNm":"'|| item_name ||'",
            "bcd":"'|| bar_code ||'",
            "pkgUnitCd":"CT",
            "pkg":"33",
            "qtyUnitCd":"PA",
            "qty":"'|| :new.NU_PRODUCT_QUANTITY ||'",
            "prc":"'|| :new.NU_PRODUCT_RATE ||'",
            "splyAmt":"'|| freight_value ||'",
            "dcRt":"'|| :new.NU_DISCOUNT ||'",
            "dcAmt":"'|| (:new.NU_DISCOUNT / 100) * (:new.NU_PRODUCT_RATE*:new.NU_PRODUCT_QUANTITY) ||'",
            "isrccCd":null,
            "isrccNm":null,
            "isrcRt":null,
            "isrcAmt":null,
            "taxTyCd":"C",
            "taxblAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
            "taxAmt":"0",
            "totAmt":"'|| :new.NU_ORDER_QTY_VAL ||'"
        }]
  }'; 
  
  req := utl_http.begin_request(url, 'POST', 'HTTP/1.1');
  utl_http.set_header(req, 'content-type', 'application/json');
  utl_http.set_header(req, 'Content-Length', length(data));
  
  utl_http.write_text(req, data);
  res := utl_http.get_response(req);

  utl_http.read_text(res, res_text);
  json_obj := json_object_t(res_text);
  
  code :=  json_obj.get_string('resultCd');
  message :=  json_obj.get_string('resultMsg');
  res_date :=  json_obj.get_string('resultDt');
  transaction_data :=  json_obj.get_Object('data');
  rcptNo :=  transaction_data.get_Number('rcptNo');
  intrlData :=  transaction_data.get_string('intrlData');
  rcptSign :=  transaction_data.get_string('rcptSign');
  totRcptNo :=  transaction_data.get_Number('totRcptNo');
  vsdcRcptPbctDate :=  transaction_data.get_string('vsdcRcptPbctDate');
  sdcId :=  transaction_data.get_string('sdcId');
  mrcNo :=  transaction_data.get_string('mrcNo');

  timestamp :=  json_obj.get_string('timestamp');
  status :=  json_obj.get_string('status');
  error :=  json_obj.get_string('error');

  INSERT INTO RRA_INVOICE_RES (CODE, MSG, DTE, RCPTNO, INTRLDATA, RCPTSIGN, TOTRCPTNO, VSDCRCPTPBCTDATE, SDCID, MRCNO, TIMESTAMP, STATUS, ERROR, JSON)
  VALUES(code, message, res_date, rcptNo, intrlData, rcptSign, totRcptNo, vsdcRcptPbctDate, sdcId, timestamp, mrcNo, status, error, data);
  
  utl_http.end_response(res);
END;






---Copy sale----
CREATE OR REPLACE TRIGGER COPY_SALES_INVOICE
AFTER INSERT ON DT_INVOICE 

for each row
DECLARE
  customer_name VARCHAR2(256);
  customer_tin VARCHAR2(256);
  customer_trade_name VARCHAR2(256);
  customer_address VARCHAR2(256);
  customer_contact VARCHAR2(256);
  customer_code VARCHAR2(256);
  dte VARCHAR2(256);
  sales_dte VARCHAR2(256);
  freight_value VARCHAR2(256);
  item_code VARCHAR2(256);
  item_name VARCHAR2(256);
  item_classification VARCHAR2(256);
  bar_code VARCHAR2(256);

  req utl_http.req;
  res utl_http.resp;
  data varchar2(4000);
  res_text  VARCHAR2(32767);
  json_obj json_object_t;
  code  VARCHAR2(256);
  message  VARCHAR2(256);
  res_date  VARCHAR2(256);
  transaction_data json_object_t;
  rcptNo INTEGER;
  intrlData VARCHAR2(256);
  rcptSign VARCHAR2(256);
  totRcptNo INTEGER;
  vsdcRcptPbctDate VARCHAR2(256);
  sdcId VARCHAR2(256);
  mrcNo VARCHAR2(256);
  timestamp  VARCHAR2(256);
  status  VARCHAR2(256);
  error  VARCHAR2(256);
  url varchar2(100) := 'http://192.168.0.144:81/abacus_rra_middleware/send_sales_transaction';

BEGIN
  SELECT
    NU_CUSTOMER_CODE,
    TO_CHAR(DT_INVOICE_DATE, 'YYYYMMDDHH24MISS'),
    NU_FREIGHT_VALUE
  
  INTO
    customer_code,
    dte,
    freight_value

  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.VC_INVOICE_NO AND VC_COMP_CODE = :new.VC_COMP_CODE AND DT_INVOICE_DATE = :new.DT_INVOICE_DATE;


  SELECT
    TO_CHAR(DT_INVOICE_DATE, 'YYYYMMDD')
  INTO
    sales_dte
  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.VC_INVOICE_NO AND VC_COMP_CODE = :new.VC_COMP_CODE AND DT_INVOICE_DATE = :new.DT_INVOICE_DATE;


  SELECT
    vc_vat_no,
    vc_CUSTOMER_NAME,
    VC_TELEPHONE,
    VC_CATEGORY_CODE,
    VC_BILL_ADDRESS1
  INTO
    customer_tin,
    customer_name,
    customer_contact,
    customer_trade_name,
    customer_address 
  FROM
    MST_CUSTOMER
  WHERE
    NU_CUSTOMER_CODE = customer_code AND VC_COMP_CODE = :new.VC_COMP_CODE;


  SELECT 
     VC_PRODUCT_NAME,
     VC_PRODUCT_CODE,
     VC_CLASSIFICATION,
     VC_BARCODE1

  INTO
     item_name,
     item_code,
     item_classification,
     bar_code

  FROM 
     MST_PRODUCT 
  WHERE 
     VC_PRODUCT_CODE = :new.VC_PRODUCT_CODE AND VC_COMP_CODE = :new.VC_COMP_CODE;


  data := '{        
        "tin":"999976940",
        "bhfId":"00",
        "invcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.VC_INVOICE_NO,5,6))) ||'",
        "orgInvcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.VC_INVOICE_NO,5,6))) ||'",
        "custTin":"'|| customer_tin ||'",
        "custNm":"'|| customer_name ||'",
        "salesTyCd":"C",
        "rcptTyCd":"S",
        "pmtTyCd":"02",
        "salesSttsCd":"02",
        "cfmDt":"'|| dte ||'",
        "salesDt":"'|| sales_dte ||'",
        "stockRlsDt":"'|| dte ||'",
        "cnclReqDt":null,
        "cnclDt":null,
        "rfdDt":null,
        "rfdRsnCd":null,
        "totItemCnt":"1",
        "taxblAmtA":"0",
        "taxblAmtB":"0",
        "taxblAmtC":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "taxblAmtD":"0",
        "taxRtA":"0",
        "taxRtB":"0",
        "taxRtC":"0",
        "taxRtD":"0",
        "taxAmtA":"0",
        "taxAmtB":"0",
        "taxAmtC":"0",
        "taxAmtD":"0",
        "totTaxblAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "totTaxAmt":"0",
        "totAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "prchrAcptcYn":"N",
        "remark":null,
        "regrId":"Admin",
        "regrNm":"Admin",
        "modrId":"Admin",
        "modrNm":"Admin",
        "receipt":{
            "custTin":"'|| customer_tin ||'",
            "custMblNo":"'|| customer_contact ||'",
            "rptNo":null,
            "trdeNm":"'|| customer_trade_name ||'",
            "adrs":"'|| customer_address ||'",
            "topMsg":null,
            "btmMsg":null,
            "prchrAcptcYn":"N"
        },
        "itemList":[{
            "itemSeq":"'|| :new.NU_SR_NO ||'",
            "itemCd":"'|| item_code ||'",
            "itemClsCd":"'|| item_classification ||'",
            "itemNm":"'|| item_name ||'",
            "bcd":"'|| bar_code ||'",
            "pkgUnitCd":"CT",
            "pkg":"33",
            "qtyUnitCd":"PA",
            "qty":"'|| :new.NU_PRODUCT_QUANTITY ||'",
            "prc":"'|| :new.NU_PRODUCT_RATE ||'",
            "splyAmt":"'|| freight_value ||'",
            "dcRt":"'|| :new.NU_DISCOUNT ||'",
            "dcAmt":"'|| (:new.NU_DISCOUNT / 100) * (:new.NU_PRODUCT_RATE*:new.NU_PRODUCT_QUANTITY) ||'",
            "isrccCd":null,
            "isrccNm":null,
            "isrcRt":null,
            "isrcAmt":null,
            "taxTyCd":"C",
            "taxblAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
            "taxAmt":"0",
            "totAmt":"'|| :new.NU_ORDER_QTY_VAL ||'"
        }]
  }'; 
  
  req := utl_http.begin_request(url, 'POST', 'HTTP/1.1');
  utl_http.set_header(req, 'content-type', 'application/json');
  utl_http.set_header(req, 'Content-Length', length(data));
  
  utl_http.write_text(req, data);
  res := utl_http.get_response(req);

  utl_http.read_text(res, res_text);
  json_obj := json_object_t(res_text);
  
  code :=  json_obj.get_string('resultCd');
  message :=  json_obj.get_string('resultMsg');
  res_date :=  json_obj.get_string('resultDt');
  transaction_data :=  json_obj.get_Object('data');
  rcptNo :=  transaction_data.get_Number('rcptNo');
  intrlData :=  transaction_data.get_string('intrlData');
  rcptSign :=  transaction_data.get_string('rcptSign');
  totRcptNo :=  transaction_data.get_Number('totRcptNo');
  vsdcRcptPbctDate :=  transaction_data.get_string('vsdcRcptPbctDate');
  sdcId :=  transaction_data.get_string('sdcId');
  mrcNo :=  transaction_data.get_string('mrcNo');

  timestamp :=  json_obj.get_string('timestamp');
  status :=  json_obj.get_string('status');
  error :=  json_obj.get_string('error');

  INSERT INTO RRA_INVOICE_RES (CODE, MSG, DTE, RCPTNO, INTRLDATA, RCPTSIGN, TOTRCPTNO, VSDCRCPTPBCTDATE, SDCID, MRCNO, TIMESTAMP, STATUS, ERROR, JSON)
  VALUES(code, message, res_date, rcptNo, intrlData, rcptSign, totRcptNo, vsdcRcptPbctDate, sdcId, timestamp, mrcNo, status, error, data);
  
  utl_http.end_response(res);
END;



---Proforma sale---
CREATE OR REPLACE TRIGGER PROFORMA_SALES_INVOICE
AFTER INSERT ON DT_INVOICE 

for each row
DECLARE
  customer_name VARCHAR2(256);
  customer_tin VARCHAR2(256);
  customer_trade_name VARCHAR2(256);
  customer_address VARCHAR2(256);
  customer_contact VARCHAR2(256);
  customer_code VARCHAR2(256);
  dte VARCHAR2(256);
  sales_dte VARCHAR2(256);
  freight_value VARCHAR2(256);
  item_code VARCHAR2(256);
  item_name VARCHAR2(256);
  item_classification VARCHAR2(256);
  bar_code VARCHAR2(256);

  req utl_http.req;
  res utl_http.resp;
  data varchar2(4000);
  res_text  VARCHAR2(32767);
  json_obj json_object_t;
  code  VARCHAR2(256);
  message  VARCHAR2(256);
  res_date  VARCHAR2(256);
  transaction_data json_object_t;
  rcptNo INTEGER;
  intrlData VARCHAR2(256);
  rcptSign VARCHAR2(256);
  totRcptNo INTEGER;
  vsdcRcptPbctDate VARCHAR2(256);
  sdcId VARCHAR2(256);
  mrcNo VARCHAR2(256);
  timestamp  VARCHAR2(256);
  status  VARCHAR2(256);
  error  VARCHAR2(256);
  url varchar2(100) := 'http://192.168.0.144:81/abacus_rra_middleware/send_sales_transaction';

BEGIN
  SELECT
    NU_CUSTOMER_CODE,
    TO_CHAR(DT_INVOICE_DATE, 'YYYYMMDDHH24MISS'),
    NU_FREIGHT_VALUE
  
  INTO
    customer_code,
    dte,
    freight_value

  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.VC_INVOICE_NO AND VC_COMP_CODE = :new.VC_COMP_CODE AND DT_INVOICE_DATE = :new.DT_INVOICE_DATE;


  SELECT
    TO_CHAR(DT_INVOICE_DATE, 'YYYYMMDD')
  INTO
    sales_dte
  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.VC_INVOICE_NO AND VC_COMP_CODE = :new.VC_COMP_CODE AND DT_INVOICE_DATE = :new.DT_INVOICE_DATE;


  SELECT
    vc_vat_no,
    vc_CUSTOMER_NAME,
    VC_TELEPHONE,
    VC_CATEGORY_CODE,
    VC_BILL_ADDRESS1
  INTO
    customer_tin,
    customer_name,
    customer_contact,
    customer_trade_name,
    customer_address 
  FROM
    MST_CUSTOMER
  WHERE
    NU_CUSTOMER_CODE = customer_code AND VC_COMP_CODE = :new.VC_COMP_CODE;


  SELECT 
     VC_PRODUCT_NAME,
     VC_PRODUCT_CODE,
     VC_CLASSIFICATION,
     VC_BARCODE1

  INTO
     item_name,
     item_code,
     item_classification,
     bar_code

  FROM 
     MST_PRODUCT 
  WHERE 
     VC_PRODUCT_CODE = :new.VC_PRODUCT_CODE AND VC_COMP_CODE = :new.VC_COMP_CODE;


  data := '{        
        "tin":"999976940",
        "bhfId":"00",
        "invcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.VC_INVOICE_NO,5,6))) ||'",
        "orgInvcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.VC_INVOICE_NO,5,6))) ||'",
        "custTin":"'|| customer_tin ||'",
        "custNm":"'|| customer_name ||'",
        "salesTyCd":"P",
        "rcptTyCd":"S",
        "pmtTyCd":"02",
        "salesSttsCd":"02",
        "cfmDt":"'|| dte ||'",
        "salesDt":"'|| sales_dte ||'",
        "stockRlsDt":"'|| dte ||'",
        "cnclReqDt":null,
        "cnclDt":null,
        "rfdDt":null,
        "rfdRsnCd":null,
        "totItemCnt":"1",
        "taxblAmtA":"0",
        "taxblAmtB":"0",
        "taxblAmtC":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "taxblAmtD":"0",
        "taxRtA":"0",
        "taxRtB":"0",
        "taxRtC":"0",
        "taxRtD":"0",
        "taxAmtA":"0",
        "taxAmtB":"0",
        "taxAmtC":"0",
        "taxAmtD":"0",
        "totTaxblAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "totTaxAmt":"0",
        "totAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
        "prchrAcptcYn":"N",
        "remark":null,
        "regrId":"Admin",
        "regrNm":"Admin",
        "modrId":"Admin",
        "modrNm":"Admin",
        "receipt":{
            "custTin":"'|| customer_tin ||'",
            "custMblNo":"'|| customer_contact ||'",
            "rptNo":null,
            "trdeNm":"'|| customer_trade_name ||'",
            "adrs":"'|| customer_address ||'",
            "topMsg":null,
            "btmMsg":null,
            "prchrAcptcYn":"N"
        },
        "itemList":[{
            "itemSeq":"'|| :new.NU_SR_NO ||'",
            "itemCd":"'|| item_code ||'",
            "itemClsCd":"'|| item_classification ||'",
            "itemNm":"'|| item_name ||'",
            "bcd":"'|| bar_code ||'",
            "pkgUnitCd":"CT",
            "pkg":"33",
            "qtyUnitCd":"PA",
            "qty":"'|| :new.NU_PRODUCT_QUANTITY ||'",
            "prc":"'|| :new.NU_PRODUCT_RATE ||'",
            "splyAmt":"'|| freight_value ||'",
            "dcRt":"'|| :new.NU_DISCOUNT ||'",
            "dcAmt":"'|| (:new.NU_DISCOUNT / 100) * (:new.NU_PRODUCT_RATE*:new.NU_PRODUCT_QUANTITY) ||'",
            "isrccCd":null,
            "isrccNm":null,
            "isrcRt":null,
            "isrcAmt":null,
            "taxTyCd":"C",
            "taxblAmt":"'|| :new.NU_ORDER_QTY_VAL ||'",
            "taxAmt":"0",
            "totAmt":"'|| :new.NU_ORDER_QTY_VAL ||'"
        }]
  }'; 
  
  req := utl_http.begin_request(url, 'POST', 'HTTP/1.1');
  utl_http.set_header(req, 'content-type', 'application/json');
  utl_http.set_header(req, 'Content-Length', length(data));
  
  utl_http.write_text(req, data);
  res := utl_http.get_response(req);

  utl_http.read_text(res, res_text);
  json_obj := json_object_t(res_text);
  
  code :=  json_obj.get_string('resultCd');
  message :=  json_obj.get_string('resultMsg');
  res_date :=  json_obj.get_string('resultDt');
  transaction_data :=  json_obj.get_Object('data');
  rcptNo :=  transaction_data.get_Number('rcptNo');
  intrlData :=  transaction_data.get_string('intrlData');
  rcptSign :=  transaction_data.get_string('rcptSign');
  totRcptNo :=  transaction_data.get_Number('totRcptNo');
  vsdcRcptPbctDate :=  transaction_data.get_string('vsdcRcptPbctDate');
  sdcId :=  transaction_data.get_string('sdcId');
  mrcNo :=  transaction_data.get_string('mrcNo');

  timestamp :=  json_obj.get_string('timestamp');
  status :=  json_obj.get_string('status');
  error :=  json_obj.get_string('error');

  INSERT INTO RRA_INVOICE_RES (CODE, MSG, DTE, RCPTNO, INTRLDATA, RCPTSIGN, TOTRCPTNO, VSDCRCPTPBCTDATE, SDCID, MRCNO, TIMESTAMP, STATUS, ERROR, JSON)
  VALUES(code, message, res_date, rcptNo, intrlData, rcptSign, totRcptNo, vsdcRcptPbctDate, sdcId, timestamp, mrcNo, status, error, data);
  
  utl_http.end_response(res);
END;








create or replace TRIGGER NORMAL_SALES_INVOICE
AFTER INSERT ON RRA_EXECUTE_SAVE_SALES_INVOICE 

for each row
DECLARE
  customer_name VARCHAR2(256);
  customer_tin VARCHAR2(256);
  customer_trade_name VARCHAR2(256);
  customer_address VARCHAR2(256);
  customer_contact VARCHAR2(256);
  customer_code VARCHAR2(256);
  dte VARCHAR2(256);
  sales_dte VARCHAR2(256);  
  order_number VARCHAR2(100);
  total_amount NUMBER := 0;

  req utl_http.req;
  res utl_http.resp;
  data varchar2(4000);
  res_text  VARCHAR2(32767);
  json_obj json_object_t;
  code  VARCHAR2(256);
  message  VARCHAR2(256);
  res_date  VARCHAR2(256);
  transaction_data json_object_t;
  rcptNo INTEGER;
  intrlData VARCHAR2(256);
  rcptSign VARCHAR2(256);
  totRcptNo INTEGER;
  vsdcRcptPbctDate VARCHAR2(256);
  sdcId VARCHAR2(256);
  mrcNo VARCHAR2(256);
  timestamp  VARCHAR2(256);
  status  VARCHAR2(256);
  error  VARCHAR2(256);

  item_list varchar2(4000);
  single_item varchar2(4000);

  company_address VARCHAR2(256);
  company_name VARCHAR2(256);

  url varchar2(100) := 'http://192.168.0.144:81/abacus_rra_middleware/send_sales_transaction';

BEGIN
  SELECT
    VC_ADDRESS1
    VC_COMPANY_NAME
  INTO
    company_address,
    company_name 
  FROM
    MST_COMPANY
  WHERE
    VC_COMP_CODE = :new.VC_COMP_CODE;

  SELECT
    NU_CUSTOMER_CODE,
    TO_CHAR(DT_CREATE_DATE, 'YYYYMMDDHH24MISS'),
    VC_ORDER_NO
  
  INTO
    customer_code,
    dte,
    order_number

  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.INVOICE_NUMBER AND VC_COMP_CODE = :new.COMP_CODE AND DT_INVOICE_DATE = :new.INVOICE_DATE;


  SELECT
    TO_CHAR(DT_CREATE_DATE, 'YYYYMMDD')
  INTO
    sales_dte
  FROM
    HD_INVOICE
  WHERE
    VC_INVOICE_NO = :new.INVOICE_NUMBER AND VC_COMP_CODE = :new.COMP_CODE AND DT_INVOICE_DATE = :new.INVOICE_DATE;


  FOR item IN(
    SELECT
        A.NU_PRODUCT_QTY,
        A.NU_PRODUCT_RATE,
        A.NU_ORDER_QTY_VAL,
        A.NU_ITEM_SERIAL,
        A.NU_DISCOUNT,
        A.NU_ORDER_QTY_VAL,
        B.VC_PRODUCT_CODE,
        B.VC_PRODUCT_NAME,
        B.VC_CLASSIFICATION,
        B.VC_BARCODE1
    FROM
        DT_SALES_ORDER A, MST_PRODUCT B
    WHERE
        A.VC_ORDER_NO = order_number AND A.DT_ORDER_DATE = :new.INVOICE_DATE AND A.VC_COMP_CODE = :new.COMP_CODE AND B.VC_PRODUCT_CODE=A.VC_PRODUCT_CODE AND B.VC_COMP_CODE = A.VC_COMP_CODE)
    
    LOOP
        total_amount := total_amount + item.NU_ORDER_QTY_VAL;

        IF item.NU_ITEM_SERIAL = :new.QUANTITY THEN
            single_item := '{
              "itemSeq":"'|| |TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(item.VC_PRODUCT_CODE,5,6))) ||'",
              "itemCd":"'|| item.VC_PRODUCT_CODE ||'",
              "itemClsCd":"'|| item.VC_CLASSIFICATIONn ||'",
              "itemNm":"'|| item.VC_PRODUCT_NAME ||'",
              "bcd":"'|| item.VC_BARCODE1 ||'",
              "pkgUnitCd":"CT",
              "pkg":"33",
              "qtyUnitCd":"PA",
              "qty":"'|| item.NU_PRODUCT_QTY ||'",
              "prc":"'|| item.NU_PRODUCT_RATE ||'",
              "splyAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
              "dcRt":"'|| item.NU_DISCOUNT ||'",
              "dcAmt":"'|| (item.NU_DISCOUNT / 100) * (item.NU_PRODUCT_RATE*item.NU_PRODUCT_QTY) ||'",
              "isrccCd":null,
              "isrccNm":null,
              "isrcRt":null,
              "isrcAmt":null,
              "taxTyCd":"C",
              "taxblAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
              "taxAmt":"0",
              "totAmt":"'|| item.NU_ORDER_QTY_VAL ||'"
            }';

        ELSE
            single_item := '{
              "itemSeq":"'|| |TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(item.VC_PRODUCT_CODE,5,6))) ||'",
              "itemCd":"'|| item.VC_PRODUCT_CODE ||'",
              "itemClsCd":"'|| item.VC_CLASSIFICATIONn ||'",
              "itemNm":"'|| item.VC_PRODUCT_NAME ||'",
              "bcd":"'|| item.VC_BARCODE1 ||'",
              "pkgUnitCd":"CT",
              "pkg":"33",
              "qtyUnitCd":"PA",
              "qty":"'|| item.NU_PRODUCT_QTY ||'",
              "prc":"'|| item.NU_PRODUCT_RATE ||'",
              "splyAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
              "dcRt":"'|| item.NU_DISCOUNT ||'",
              "dcAmt":"'|| (item.NU_DISCOUNT / 100) * (item.NU_PRODUCT_RATE*item.NU_PRODUCT_QTY) ||'",
              "isrccCd":null,
              "isrccNm":null,
              "isrcRt":null,
              "isrcAmt":null,
              "taxTyCd":"C",
              "taxblAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
              "taxAmt":"0",
              "totAmt":"'|| item.NU_ORDER_QTY_VAL ||'"
            },';

        END IF;
    
        item_list := item_list || single_item;
        
    END LOOP;


  SELECT
    vc_vat_no,
    vc_CUSTOMER_NAME,
    VC_TELEPHONE,
    VC_CATEGORY_CODE,
    VC_BILL_ADDRESS1
  INTO
    customer_tin,
    customer_name,
    customer_contact,
    customer_trade_name,
    customer_address 
  FROM
    MST_CUSTOMER
  WHERE
    NU_CUSTOMER_CODE = customer_code AND VC_COMP_CODE = :new.VC_COMP_CODE;



  data := '{        
        "tin":"999976940",'|| chr(10) ||'
        "bhfId":"00",'|| chr(10) ||'
        "invcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.INVOICE_NUMBER,5,6))) ||'",'|| chr(10) ||'
        "orgInvcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.INVOICE_NUMBER,5,6))) ||'",'|| chr(10) ||'
        "custTin":"'|| customer_tin ||'",'|| chr(10) ||'
        "custNm":"'|| customer_name ||'",'|| chr(10) ||'
        "salesTyCd":"N",'|| chr(10) ||'
        "rcptTyCd":"S",'|| chr(10) ||'
        "pmtTyCd":"02",'|| chr(10) ||'
        "salesSttsCd":"02",'|| chr(10) ||'
        "cfmDt":"'|| dte ||'",'|| chr(10) ||'
        "salesDt":"'|| sales_dte ||'",'|| chr(10) ||'
        "stockRlsDt":"'|| dte ||'",'|| chr(10) ||'
        "cnclReqDt":null,'|| chr(10) ||'
        "cnclDt":null,'|| chr(10) ||'
        "rfdDt":null,'|| chr(10) ||'
        "rfdRsnCd":null,'|| chr(10) ||'
        "totItemCnt":"'|| :new.QUANTITY ||'",
        "taxblAmtA":"0",
        "taxblAmtB":"0",
        "taxblAmtC":"'|| total_amount ||'",
        "taxblAmtD":"0",
        "taxRtA":"0",
        "taxRtB":"0",
        "taxRtC":"0",
        "taxRtD":"0",
        "taxAmtA":"0",
        "taxAmtB":"0",
        "taxAmtC":"0",
        "taxAmtD":"0",
        "totTaxblAmt":"'|| total_amount ||'",'|| chr(10) ||'
        "totTaxAmt":"0",
        "totAmt":"'|| total_amount ||'",'|| chr(10) ||'
        "prchrAcptcYn":"N",
        "remark":null,
        "regrId":"Admin",
        "regrNm":"Admin",
        "modrId":"Admin",
        "modrNm":"Admin",
        "receipt":{
            "custTin":"'|| customer_tin ||'",'|| chr(10) ||'
            "custMblNo":"'|| customer_contact ||'",'|| chr(10) ||'
            "rptNo":null,'|| chr(10) ||'
            "trdeNm":"'|| customer_trade_name ||'",'|| chr(10) ||'
            "adrs":"'|| customer_address ||'",'|| chr(10) ||'
            "topMsg":"'|| company_name || chr(10) || company_address || chr(10) ||'TIN: 999976940"
            "btmMsg":null,'|| chr(10) ||'
            "prchrAcptcYn":"N"'|| chr(10) ||'
        },
        "itemList":['|| item_list ||']
  }'; 
  
  req := utl_http.begin_request(url, 'POST', 'HTTP/1.1');
  utl_http.set_header(req, 'content-type', 'application/json');
  utl_http.set_header(req, 'Content-Length', length(data));
  
  utl_http.write_text(req, data);
  res := utl_http.get_response(req);

  utl_http.read_text(res, res_text);
  json_obj := json_object_t(res_text);
  utl_http.end_response(res);
    
  code :=  json_obj.get_string('resultCd');
  message :=  json_obj.get_string('resultMsg');
  res_date :=  json_obj.get_string('resultDt');
  transaction_data :=  json_obj.get_Object('data');
  rcptNo :=  transaction_data.get_Number('rcptNo');
  intrlData :=  transaction_data.get_string('intrlData');
  rcptSign :=  transaction_data.get_string('rcptSign');
  totRcptNo :=  transaction_data.get_Number('totRcptNo');
  vsdcRcptPbctDate :=  transaction_data.get_string('vsdcRcptPbctDate');
  sdcId :=  transaction_data.get_string('sdcId');
  mrcNo :=  transaction_data.get_string('mrcNo');

  timestamp :=  json_obj.get_string('timestamp');
  status :=  json_obj.get_string('status');
  error :=  json_obj.get_string('error');

  INSERT INTO RRA_NORMAL_INVOICE_RES (INVOICE_NUMBER, CODE, MSG, DTE, RCPTNO, INTRLDATA, RCPTSIGN, TOTRCPTNO, VSDCRCPTPBCTDATE, SDCID, MRCNO, TIMESTAMP, STATUS, ERROR, JSON)
  VALUES(TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(:new.INVOICE_NUMBER,5,6))), code, message, res_date, rcptNo, intrlData, rcptSign, totRcptNo, vsdcRcptPbctDate, sdcId, timestamp, mrcNo, status, error, data);
  UPDATE HD_INVOICE SET URA_RTN_AFCODE = rcptSign, VC_URA_MSG = message WHERE VC_INVOICE_NO = :new.INVOICE_NUMBER AND DT_INVOICE_DATE = :new.INVOICE_DATE AND VC_COMP_CODE = :new.COMP_CODE;
END;




SUPPLIERTIN	VARCHAR2(100 BYTE)	Yes		1	
SUPPLIERINVOICENUMBER	VARCHAR2(100 BYTE)	Yes		2	
TOTALAMOUNT	NUMBER	Yes		3

ITEMSEQUENCE	NUMBER	Yes		4	

ITEMCODE	VARCHAR2(100 BYTE)	Yes		5	
ITEMCLASSIFICATIONCODE	VARCHAR2(100 BYTE)	Yes		6	

ITEMNAME	VARCHAR2(100 BYTE)	Yes		7	


BARCODE	VARCHAR2(100 BYTE)	Yes		8	
PACKAGINGUNITCODE	VARCHAR2(100 BYTE)	Yes		9	
PACKAGE	NUMBER	Yes		10	
QUANTITYUNITCODE	VARCHAR2(100 BYTE)	Yes		11	
QUANTITY	NUMBER	Yes		12	
UNITPRICE	NUMBER	Yes		13	
SUPPLYAMOUNT	NUMBER	Yes		14	
DISCOUNTRATE	NUMBER	Yes		15	
DISCOUNTAMOUNT	NUMBER	Yes		16	
TAXABLEAMOUNT	NUMBER	Yes		17	
TAXATIONTYPECODE	VARCHAR2(100 BYTE)	Yes		18	
TAXAMOUNT	NUMBER	Yes		19	
REQ_DATE	DATE	Yes		20	




create or replace TRIGGER SAVE_NORMAL_SALES_INVOICE
AFTER INSERT OR UPDATE ON RRA_EXECUTE_SAVE_NORMAL_SALES_INVOICE 

for each row
DECLARE
  customer_name VARCHAR2(256);
  customer_tin VARCHAR2(256);
  customer_trade_name VARCHAR2(256);
  customer_address VARCHAR2(256);
  customer_contact VARCHAR2(256);
  customer_code VARCHAR2(256);
  dte VARCHAR2(256);
  sales_dte VARCHAR2(256);  
  order_number VARCHAR2(100);
  total_amount NUMBER := 0;
  payment_mode VARCHAR2(256);
  payment_type VARCHAR2(256);

  req utl_http.req;
  res utl_http.resp;
  data CLOB;
  res_text  VARCHAR2(32767);
  json_obj json_object_t;
  code  VARCHAR2(256);
  message  VARCHAR2(256);
  res_date  VARCHAR2(256);
  transaction_data json_object_t;
  rcptNo INTEGER;
  intrlData VARCHAR2(256);
  rcptSign VARCHAR2(256);
  totRcptNo INTEGER;
  vsdcRcptPbctDate VARCHAR2(256);
  sdcId VARCHAR2(256);
  mrcNo VARCHAR2(256);
  timestamp  VARCHAR2(256);
  status  VARCHAR2(256);
  error  VARCHAR2(256);

  item_list CLOB;
  single_item varchar2(4000);

  company_address VARCHAR2(256);
  company_name VARCHAR2(256);

  url varchar2(100) := 'http://192.168.0.144:81/abacus_rra_middleware/send_sales_transaction';

BEGIN
  IF :new.QUANTITY = :new.COUNTER THEN
      SELECT
        VC_ADDRESS1,
        VC_COMPANY_NAME
      INTO
        company_address,
        company_name 
      FROM
        MST_COMPANY
      WHERE
        VC_COMP_CODE = :new.COMP_CODE;

      SELECT
        NU_CUSTOMER_CODE,
        TO_CHAR(DT_CREATE_DATE, 'YYYYMMDDHH24MISS'),
        VC_ORDER_NO,
        VC_MODE
      
      INTO
        customer_code,
        dte,
        order_number,
        payment_mode
    
      FROM
        HD_INVOICE
      WHERE
        VC_INVOICE_NO = :new.INVOICE_NUMBER AND VC_COMP_CODE = :new.COMP_CODE AND DT_INVOICE_DATE = :new.INVOICE_DATE;
    
    
      SELECT
        TO_CHAR(DT_CREATE_DATE, 'YYYYMMDD')
      INTO
        sales_dte
      FROM
        HD_INVOICE
      WHERE
        VC_INVOICE_NO = :new.INVOICE_NUMBER AND VC_COMP_CODE = :new.COMP_CODE AND DT_INVOICE_DATE = :new.INVOICE_DATE;
    
    
      FOR item IN(
        SELECT
            A.NU_PRODUCT_QTY,
            A.NU_PRODUCT_RATE,
            A.NU_ORDER_QTY_VAL,
            A.NU_ITEM_SERIAL,
            A.NU_DISCOUNT,
            B.VC_RRA_PRODUCT_CODE,
            B.VC_PRODUCT_CODE,
            B.VC_PRODUCT_NAME,
            B.VC_RRA_PACK,
            B.VC_RRA_CARTON,
            B.VC_BARCODE1
        FROM
            DT_INVOICE A, MST_PRODUCT B
        WHERE
            A.VC_ORDER_NO = order_number AND A.DT_ORDER_DATE = :new.INVOICE_DATE AND A.VC_COMP_CODE = :new.COMP_CODE AND B.VC_PRODUCT_CODE=A.VC_PRODUCT_CODE AND B.VC_COMP_CODE = A.VC_COMP_CODE)
        
        LOOP
            total_amount := total_amount + item.NU_ORDER_QTY_VAL;
    
            IF item.NU_ITEM_SERIAL = :new.QUANTITY THEN
                single_item := '{
                  "itemSeq":"'|| item.NU_ITEM_SERIAL ||'",
                  "itemCd":"'|| item.VC_RRA_PRODUCT_CODE ||'",
                  "itemClsCd":"80141700",
                  "itemNm":"'|| item.VC_PRODUCT_NAME ||'",
                  "bcd":"'|| item.VC_BARCODE1 ||'",
                  "pkgUnitCd":"'|| item.VC_RRA_CARTON ||'",
                  "pkg":"0",
                  "qtyUnitCd":"'|| item.VC_RRA_PACK ||'",
                  "qty":"'|| item.NU_PRODUCT_QTY ||'",
                  "prc":"'|| item.NU_PRODUCT_RATE ||'",
                  "splyAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "dcRt":"'|| item.NU_DISCOUNT ||'",
                  "dcAmt":"'|| (item.NU_DISCOUNT / 100) * (item.NU_PRODUCT_RATE*item.NU_PRODUCT_QTY) ||'",
                  "isrccCd":null,
                  "isrccNm":null,
                  "isrcRt":null,
                  "isrcAmt":null,
                  "taxTyCd":"C",
                  "taxblAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "taxAmt":"0",
                  "totAmt":"'|| item.NU_ORDER_QTY_VAL ||'"
                }';
    
            ELSE
                single_item := '{
                  "itemSeq":"'|| item.NU_ITEM_SERIAL ||'",
                  "itemCd":"'|| item.VC_RRA_PRODUCT_CODE ||'",
                  "itemClsCd":"80141700",
                  "itemNm":"'|| item.VC_PRODUCT_NAME ||'",
                  "bcd":"'|| item.VC_BARCODE1 ||'",
                  "pkgUnitCd":"'|| item.VC_RRA_CARTON ||'",
                  "pkg":"0",
                  "qtyUnitCd":"'|| item.VC_RRA_PACK ||'",
                  "qty":"'|| item.NU_PRODUCT_QTY ||'",
                  "prc":"'|| item.NU_PRODUCT_RATE ||'",
                  "splyAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "dcRt":"'|| item.NU_DISCOUNT ||'",
                  "dcAmt":"'|| (item.NU_DISCOUNT / 100) * (item.NU_PRODUCT_RATE*item.NU_PRODUCT_QTY) ||'",
                  "isrccCd":null,
                  "isrccNm":null,
                  "isrcRt":null,
                  "isrcAmt":null,
                  "taxTyCd":"C",
                  "taxblAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "taxAmt":"0",
                  "totAmt":"'|| item.NU_ORDER_QTY_VAL ||'"
                },';
    
            END IF;
        
            item_list := item_list || single_item;
            
        END LOOP;
    
    
      SELECT
        VC_TIN_NO,
        vc_CUSTOMER_NAME,
        VC_TELEPHONE,
        VC_CATEGORY_CODE,
        VC_BILL_ADDRESS1
      INTO
        customer_tin,
        customer_name,
        customer_contact,
        customer_trade_name,
        customer_address 
      FROM
        MST_CUSTOMER
      WHERE
        NU_CUSTOMER_CODE = customer_code AND VC_COMP_CODE = :new.COMP_CODE;
    
    
     IF (payment_mode = 'Cash') THEN
          payment_type := '01';
      END IF;
      
      IF (payment_mode = 'Credit') THEN
          payment_type := '02';
      END IF;
      
      data := '{        
            "tin":"999976940",'|| chr(10) ||'
            "bhfId":"00",'|| chr(10) ||'
            "invcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), 1, INSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), '/')-1))) ||'",'|| chr(10) ||'
            "orgInvcNo":"null",'|| chr(10) ||'
            "custTin":"",'|| chr(10) ||'
            "custNm":"'|| customer_name ||'",'|| chr(10) ||'
            "salesTyCd":"N",'|| chr(10) ||'
            "rcptTyCd":"S",'|| chr(10) ||'
            "pmtTyCd":"'|| payment_type ||'",'|| chr(10) ||'
            "salesSttsCd":"02",'|| chr(10) ||'
            "cfmDt":"'|| dte ||'",'|| chr(10) ||'
            "salesDt":"'|| sales_dte ||'",'|| chr(10) ||'
            "stockRlsDt":"'|| dte ||'",'|| chr(10) ||'
            "cnclReqDt":null,'|| chr(10) ||'
            "cnclDt":null,'|| chr(10) ||'
            "rfdDt":null,'|| chr(10) ||'
            "rfdRsnCd":null,'|| chr(10) ||'
            "totItemCnt":"'|| :new.QUANTITY ||'",
            "taxblAmtA":"0",
            "taxblAmtB":"0",
            "taxblAmtC":"'|| total_amount ||'",
            "taxblAmtD":"0",
            "taxRtA":"0",
            "taxRtB":"0",
            "taxRtC":"0",
            "taxRtD":"0",
            "taxAmtA":"0",
            "taxAmtB":"0",
            "taxAmtC":"0",
            "taxAmtD":"0",
            "totTaxblAmt":"'|| total_amount ||'",'|| chr(10) ||'
            "totTaxAmt":"0",
            "totAmt":"'|| total_amount ||'",'|| chr(10) ||'
            "prchrAcptcYn":"N",
            "remark":null,
            "regrId":"Admin",
            "regrNm":"Admin",
            "modrId":"Admin",
            "modrNm":"Admin",
            "receipt":{
                "custTin":"",'|| chr(10) ||'
                "custMblNo":"'|| customer_contact ||'",'|| chr(10) ||'
                "rptNo":null,'|| chr(10) ||'
                "trdeNm":"'|| customer_trade_name ||'",'|| chr(10) ||'
                "adrs":"'|| customer_address ||'",'|| chr(10) ||'
                "topMsg":"'|| company_name || chr(10) || company_address || chr(10) ||'TIN: 999976940"
                "btmMsg":null,'|| chr(10) ||'
                "prchrAcptcYn":"N"'|| chr(10) ||'
            },
            "itemList":['|| item_list ||']
      }'; 
      
      req := utl_http.begin_request(url, 'POST', 'HTTP/1.1');
      utl_http.set_header(req, 'content-type', 'application/json');
      utl_http.set_header(req, 'Content-Length', length(data));
      
      utl_http.write_text(req, data);
      res := utl_http.get_response(req);
    
      utl_http.read_text(res, res_text);
      json_obj := json_object_t(res_text);
      utl_http.end_response(res);
        
      code :=  json_obj.get_string('resultCd');
      message :=  json_obj.get_string('resultMsg');
      res_date :=  json_obj.get_string('resultDt');
      transaction_data :=  json_obj.get_Object('data');
      rcptNo :=  transaction_data.get_Number('rcptNo');
      intrlData :=  transaction_data.get_string('intrlData');
      rcptSign :=  transaction_data.get_string('rcptSign');
      totRcptNo :=  transaction_data.get_Number('totRcptNo');
      vsdcRcptPbctDate :=  transaction_data.get_string('vsdcRcptPbctDate');
      sdcId :=  transaction_data.get_string('sdcId');
      mrcNo :=  transaction_data.get_string('mrcNo');
    
      timestamp :=  json_obj.get_string('timestamp');
      status :=  json_obj.get_string('status');
      error :=  json_obj.get_string('error');
    
      INSERT INTO RRA_NORMAL_INVOICE_RES (INVOICE_NUMBER, CODE, MSG, DTE, RCPTNO, INTRLDATA, RCPTSIGN, TOTRCPTNO, VSDCRCPTPBCTDATE, SDCID, MRCNO, TIMESTAMP, STATUS, ERROR, JSON)
      VALUES(TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), 1, INSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), '/')-1))), code, message, res_date, rcptNo, intrlData, rcptSign, totRcptNo, vsdcRcptPbctDate, sdcId, timestamp, mrcNo, status, error, data);
      UPDATE HD_INVOICE SET URA_RTN_AFCODE = rcptSign, VC_URA_MSG = message WHERE VC_INVOICE_NO = :new.INVOICE_NUMBER AND DT_INVOICE_DATE = :new.INVOICE_DATE AND VC_COMP_CODE = :new.COMP_CODE;
  END IF;
END;




------------New Proforma invoice--------------

create or replace TRIGGER SAVE_NORMAL_SALES_INVOICE
AFTER INSERT OR UPDATE ON RRA_EXECUTE_SAVE_NORMAL_SALES_INVOICE 

for each row
DECLARE
  customer_name VARCHAR2(256);
  customer_tin VARCHAR2(256);
  customer_trade_name VARCHAR2(256);
  customer_address VARCHAR2(256);
  customer_contact VARCHAR2(256);
  customer_code VARCHAR2(256);
  dte VARCHAR2(256);
  sales_dte VARCHAR2(256);  
  order_number VARCHAR2(100);
  total_amount NUMBER := 0;
  payment_mode VARCHAR2(256);
  payment_type VARCHAR2(256);

  req utl_http.req;
  res utl_http.resp;
  data CLOB;
  res_text  VARCHAR2(32767);
  json_obj json_object_t;
  code  VARCHAR2(256);
  message  VARCHAR2(256);
  res_date  VARCHAR2(256);
  transaction_data json_object_t;
  rcptNo INTEGER;
  intrlData VARCHAR2(256);
  rcptSign VARCHAR2(256);
  totRcptNo INTEGER;
  vsdcRcptPbctDate VARCHAR2(256);
  sdcId VARCHAR2(256);
  mrcNo VARCHAR2(256);
  timestamp  VARCHAR2(256);
  status  VARCHAR2(256);
  error  VARCHAR2(256);

  item_list CLOB;
  single_item varchar2(4000);

  company_address VARCHAR2(256);
  company_name VARCHAR2(256);

  url varchar2(100) := 'http://192.168.0.144:81/abacus_rra_middleware/send_sales_transaction';

BEGIN
  IF :new.QUANTITY = :new.COUNTER THEN
      SELECT
        VC_ADDRESS1,
        VC_COMPANY_NAME
      INTO
        company_address,
        company_name 
      FROM
        MST_COMPANY
      WHERE
        VC_COMP_CODE = :new.COMP_CODE;

      SELECT
        NU_CUSTOMER_CODE,
        TO_CHAR(DT_CREATE_DATE, 'YYYYMMDDHH24MISS'),
        VC_ORDER_NO,
        VC_MODE
      
      INTO
        customer_code,
        dte,
        order_number,
        payment_mode
    
      FROM
        HD_INVOICE
      WHERE
        VC_INVOICE_NO = :new.INVOICE_NUMBER AND VC_COMP_CODE = :new.COMP_CODE AND DT_INVOICE_DATE = :new.INVOICE_DATE;
    
    
      SELECT
        TO_CHAR(DT_CREATE_DATE, 'YYYYMMDD')
      INTO
        sales_dte
      FROM
        HD_INVOICE
      WHERE
        VC_INVOICE_NO = :new.INVOICE_NUMBER AND VC_COMP_CODE = :new.COMP_CODE AND DT_INVOICE_DATE = :new.INVOICE_DATE;
    
    
      FOR item IN(
        SELECT
            A.NU_PRODUCT_QTY,
            A.NU_PRODUCT_RATE,
            A.NU_ORDER_QTY_VAL,
            A.NU_ITEM_SERIAL,
            A.NU_DISCOUNT,
            B.VC_RRA_PRODUCT_CODE,
            B.VC_PRODUCT_CODE,
            B.VC_PRODUCT_NAME,
            B.VC_RRA_PACK,
            B.VC_RRA_CARTON,
            B.VC_BARCODE1
        FROM
            DT_INVOICE A, MST_PRODUCT B
        WHERE
            A.VC_ORDER_NO = order_number AND A.DT_ORDER_DATE = :new.INVOICE_DATE AND A.VC_COMP_CODE = :new.COMP_CODE AND B.VC_PRODUCT_CODE=A.VC_PRODUCT_CODE AND B.VC_COMP_CODE = A.VC_COMP_CODE)
        
        LOOP
            total_amount := total_amount + item.NU_ORDER_QTY_VAL;
    
            IF item.NU_ITEM_SERIAL = :new.QUANTITY THEN
                single_item := '{
                  "itemSeq":"'|| item.NU_ITEM_SERIAL ||'",
                  "itemCd":"'|| item.VC_RRA_PRODUCT_CODE ||'",
                  "itemClsCd":"80141700",
                  "itemNm":"'|| item.VC_PRODUCT_NAME ||'",
                  "bcd":"'|| item.VC_BARCODE1 ||'",
                  "pkgUnitCd":"'|| item.VC_RRA_CARTON ||'",
                  "pkg":"0",
                  "qtyUnitCd":"'|| item.VC_RRA_PACK ||'",
                  "qty":"'|| item.NU_PRODUCT_QTY ||'",
                  "prc":"'|| item.NU_PRODUCT_RATE ||'",
                  "splyAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "dcRt":"'|| item.NU_DISCOUNT ||'",
                  "dcAmt":"'|| (item.NU_DISCOUNT / 100) * (item.NU_PRODUCT_RATE*item.NU_PRODUCT_QTY) ||'",
                  "isrccCd":null,
                  "isrccNm":null,
                  "isrcRt":null,
                  "isrcAmt":null,
                  "taxTyCd":"C",
                  "taxblAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "taxAmt":"0",
                  "totAmt":"'|| item.NU_ORDER_QTY_VAL ||'"
                }';
    
            ELSE
                single_item := '{
                  "itemSeq":"'|| item.NU_ITEM_SERIAL ||'",
                  "itemCd":"'|| item.VC_RRA_PRODUCT_CODE ||'",
                  "itemClsCd":"80141700",
                  "itemNm":"'|| item.VC_PRODUCT_NAME ||'",
                  "bcd":"'|| item.VC_BARCODE1 ||'",
                  "pkgUnitCd":"'|| item.VC_RRA_CARTON ||'",
                  "pkg":"0",
                  "qtyUnitCd":"'|| item.VC_RRA_PACK ||'",
                  "qty":"'|| item.NU_PRODUCT_QTY ||'",
                  "prc":"'|| item.NU_PRODUCT_RATE ||'",
                  "splyAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "dcRt":"'|| item.NU_DISCOUNT ||'",
                  "dcAmt":"'|| (item.NU_DISCOUNT / 100) * (item.NU_PRODUCT_RATE*item.NU_PRODUCT_QTY) ||'",
                  "isrccCd":null,
                  "isrccNm":null,
                  "isrcRt":null,
                  "isrcAmt":null,
                  "taxTyCd":"C",
                  "taxblAmt":"'|| item.NU_ORDER_QTY_VAL ||'",
                  "taxAmt":"0",
                  "totAmt":"'|| item.NU_ORDER_QTY_VAL ||'"
                },';
    
            END IF;
        
            item_list := item_list || single_item;
            
        END LOOP;
    
    
      SELECT
        VC_TIN_NO,
        vc_CUSTOMER_NAME,
        VC_TELEPHONE,
        VC_CATEGORY_CODE,
        VC_BILL_ADDRESS1
      INTO
        customer_tin,
        customer_name,
        customer_contact,
        customer_trade_name,
        customer_address 
      FROM
        MST_CUSTOMER
      WHERE
        NU_CUSTOMER_CODE = customer_code AND VC_COMP_CODE = :new.COMP_CODE;
    
    
     IF (payment_mode = 'Cash') THEN
          payment_type := '01';
      END IF;
      
      IF (payment_mode = 'Credit') THEN
          payment_type := '02';
      END IF;
      
      data := '{        
            "tin":"999976940",'|| chr(10) ||'
            "bhfId":"00",'|| chr(10) ||'
            "invcNo":"'||  TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), 1, INSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), '/')-1))) ||'",'|| chr(10) ||'
            "orgInvcNo":"null",'|| chr(10) ||'
            "custTin":"",'|| chr(10) ||'
            "custNm":"'|| customer_name ||'",'|| chr(10) ||'
            "salesTyCd":"N",'|| chr(10) ||'
            "rcptTyCd":"S",'|| chr(10) ||'
            "pmtTyCd":"'|| payment_type ||'",'|| chr(10) ||'
            "salesSttsCd":"02",'|| chr(10) ||'
            "cfmDt":"'|| dte ||'",'|| chr(10) ||'
            "salesDt":"'|| sales_dte ||'",'|| chr(10) ||'
            "stockRlsDt":"'|| dte ||'",'|| chr(10) ||'
            "cnclReqDt":null,'|| chr(10) ||'
            "cnclDt":null,'|| chr(10) ||'
            "rfdDt":null,'|| chr(10) ||'
            "rfdRsnCd":null,'|| chr(10) ||'
            "totItemCnt":"'|| :new.QUANTITY ||'",
            "taxblAmtA":"0",
            "taxblAmtB":"0",
            "taxblAmtC":"'|| total_amount ||'",
            "taxblAmtD":"0",
            "taxRtA":"0",
            "taxRtB":"0",
            "taxRtC":"0",
            "taxRtD":"0",
            "taxAmtA":"0",
            "taxAmtB":"0",
            "taxAmtC":"0",
            "taxAmtD":"0",
            "totTaxblAmt":"'|| total_amount ||'",'|| chr(10) ||'
            "totTaxAmt":"0",
            "totAmt":"'|| total_amount ||'",'|| chr(10) ||'
            "prchrAcptcYn":"N",
            "remark":null,
            "regrId":"Admin",
            "regrNm":"Admin",
            "modrId":"Admin",
            "modrNm":"Admin",
            "receipt":{
                "custTin":"",'|| chr(10) ||'
                "custMblNo":"'|| customer_contact ||'",'|| chr(10) ||'
                "rptNo":null,'|| chr(10) ||'
                "trdeNm":"'|| customer_trade_name ||'",'|| chr(10) ||'
                "adrs":"'|| customer_address ||'",'|| chr(10) ||'
                "topMsg":"'|| company_name || chr(10) || company_address || chr(10) ||'TIN: 999976940"
                "btmMsg":null,'|| chr(10) ||'
                "prchrAcptcYn":"N"'|| chr(10) ||'
            },
            "itemList":['|| item_list ||']
      }'; 
      
      req := utl_http.begin_request(url, 'POST', 'HTTP/1.1');
      utl_http.set_header(req, 'content-type', 'application/json');
      utl_http.set_header(req, 'Content-Length', length(data));
      
      utl_http.write_text(req, data);
      res := utl_http.get_response(req);
    
      utl_http.read_text(res, res_text);
      json_obj := json_object_t(res_text);
      utl_http.end_response(res);
        
      code :=  json_obj.get_string('resultCd');
      message :=  json_obj.get_string('resultMsg');
      res_date :=  json_obj.get_string('resultDt');
      transaction_data :=  json_obj.get_Object('data');
      rcptNo :=  transaction_data.get_Number('rcptNo');
      intrlData :=  transaction_data.get_string('intrlData');
      rcptSign :=  transaction_data.get_string('rcptSign');
      totRcptNo :=  transaction_data.get_Number('totRcptNo');
      vsdcRcptPbctDate :=  transaction_data.get_string('vsdcRcptPbctDate');
      sdcId :=  transaction_data.get_string('sdcId');
      mrcNo :=  transaction_data.get_string('mrcNo');
    
      timestamp :=  json_obj.get_string('timestamp');
      status :=  json_obj.get_string('status');
      error :=  json_obj.get_string('error');
    
      INSERT INTO RRA_NORMAL_INVOICE_RES (INVOICE_NUMBER, CODE, MSG, DTE, RCPTNO, INTRLDATA, RCPTSIGN, TOTRCPTNO, VSDCRCPTPBCTDATE, SDCID, MRCNO, TIMESTAMP, STATUS, ERROR, JSON)
      VALUES(TO_CHAR(TRIM(LEADING 0 FROM SUBSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), 1, INSTR(REPLACE(:new.INVOICE_NUMBER, 'AP', '00'), '/')-1))), code, message, res_date, rcptNo, intrlData, rcptSign, totRcptNo, vsdcRcptPbctDate, sdcId, timestamp, mrcNo, status, error, data);
      UPDATE HD_INVOICE SET URA_RTN_AFCODE = rcptSign, VC_URA_MSG = message WHERE VC_INVOICE_NO = :new.INVOICE_NUMBER AND DT_INVOICE_DATE = :new.INVOICE_DATE AND VC_COMP_CODE = :new.COMP_CODE;
  END IF;
END;

 substr(INTRLDATA,1,4)||'-'||substr(INTRLDATA,5,4) ||'-'||substr(INTRLDATA,9,4) ||'-'||substr(INTRLDATA,13,4) ||'-'||substr(INTRLDATA,17,4)||'-'||substr(INTRLDATA,21,4) ||'-'||substr(INTRLDATA,25,4) from RRA_NORMAL_INVOICE_RES;

qr_code := TO_CHAR(DT_CREATE_DATE, 'DDMMYYYY') || "#" || TO_CHAR(DT_CREATE_DATE, 'HH24MISS') || "#" || sdcId || "#" || rra_invoice_number || "/" || totRcptNo || "NS" || "#" ||
substr(INTRLDATA,1,4)||'-'||substr(INTRLDATA,5,4) ||'-'||substr(INTRLDATA,9,4) ||'-'||substr(INTRLDATA,13,4) ||'-'||substr(INTRLDATA,17,4)||'-'||substr(INTRLDATA,21,4) ||'-'||substr(INTRLDATA,25,4) || "#" ||
substr(RCPTSIGN,1,4)||'-'||substr(RCPTSIGN,5,4) ||'-'||substr(RCPTSIGN,9,4) ||'-'||substr(RCPTSIGN,13,4) ||'-'||substr(RCPTSIGN,17,4)||'-'||substr(RCPTSIGN,21,4) ||'-'||substr(RCPTSIGN,25,4); 